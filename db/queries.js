/**
 * Queries used in creating relevant tables
 */

const createQueries = {

  // Users table
  usersTable: `
  CREATE TABLE IF NOT EXISTS
   users(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    phoneNumber VARCHAR(15),
    username VARCHAR(100),
    registered TIMESTAMP NOT NULL DEFAULT NOW(),
    isAdmin BOOLEAN NOT NULL DEFAULT false
  )`,

  // Meetups table
  meetupsTable: `
  CREATE TABLE IF NOT EXISTS
   meetups(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    createdOn TIMESTAMP NOT NULL DEFAULT NOW(),
    location VARCHAR(255),
    topic VARCHAR(255),
    happeningOn TIMESTAMP,
    tags VARCHAR[]
  )`,

  // Questions table
  questionsTable: `
  CREATE TABLE IF NOT EXISTS
   questions(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    createdOn TIMESTAMP NOT NULL DEFAULT NOW(),
    userID INT REFERENCES users (id),
    meetupID INT REFERENCES meetups (id),
    title VARCHAR(255),
    body VARCHAR(255)
  )`,

  // RSVP table
  rsvpTable: `
  CREATE TABLE IF NOT EXISTS
   rsvp(
    id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    userID INT REFERENCES users (id),
    meetupID INT REFERENCES meetups (id),
    response VARCHAR(255),
    PRIMARY KEY(userID, meetupID)
  )`,
};


/**
 * Queries used in dropping relevant tables
 */

const dropQueries = {

  // Users table
  usersTable: 'DROP TABLE IF EXISTS users',

  // Meetups table
  meetupsTable: 'DROP TABLE IF EXISTS meetups',

  // Questions table
  questionsTable: 'DROP TABLE IF EXISTS questions',

  // RSVP table
  rsvpTable: 'DROP TABLE IF EXISTS rsvp',
};

module.exports = {
  createQueries,
  dropQueries,
};
